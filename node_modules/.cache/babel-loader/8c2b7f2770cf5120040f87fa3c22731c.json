{"ast":null,"code":"var _jsxFileName = \"/home/nahuela/ADesk/my_projects/lazygram_django/staticfiles/lazygram_app/src/apps/posts/ListPosts.js\";\n\n/* List posts from lazygram with react */\nimport { lg_api } from \"../../__modules__\";\nimport \"../../css/posts/ListPosts.css\";\nimport React from \"react\";\nimport { BsFillHeartFill, BsFillChatFill, BsFillBookmarkFill, BsShareFill } from \"react-icons/bs\";\nimport { likePost, inputComment } from \"../../utils/posts/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListPosts extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      posts: [],\n      comments: []\n    };\n    this.token = window.localStorage.getItem(\"token\");\n    this.http_media = \"http://localhost:8000/media/\";\n    this.post_img = \"\";\n    this.created = \"\";\n\n    this.handledPosts = e => {\n      likePost(e);\n    };\n\n    this.addHTTPMedia = this.addHTTPMedia.bind(this);\n    this.goToProfile = this.goToProfile.bind(this);\n    this.goToProfileComment = this.goToProfileComment.bind(this);\n    this.commentComponent = this.commentComponent.bind(this);\n  }\n\n  commentComponent(e) {\n    let len = e.target.id.split(\"\").length;\n    let id = e.target.id.slice(11, len);\n    lg_api(`comments/`, {\n      headers: {\n        Authorization: `Token ${this.token}`\n      },\n      params: {\n        id_post: id\n      }\n    }).then(res => {\n      this.setState({\n        comments: res.data\n      });\n    }).catch(err => {\n      console.error(err.response);\n    });\n  }\n  /**\n   * Redirect to the desired profile.\n   * @param {*} post\n   */\n\n\n  goToProfileComment(e) {\n    // Getting username\n    let len = e.nativeEvent.path[1].nextSibling.childNodes[0].innerText.length;\n    let profile;\n\n    if (e.target.id.startsWith(\"id_image_prof_comment_\")) {\n      profile = e.nativeEvent.path[1].nextSibling.childNodes[0].innerText.slice(0, len - 1);\n    } else {\n      profile = e.target.firstChild.data;\n    } // set in localStorage the profile name\n\n\n    window.localStorage.setItem(\"profile\", `${profile}`);\n    window.location.hash = \"#profile\";\n  }\n\n  goToProfile(e) {\n    // Getting profile name\n    let profile;\n\n    if (e.target.id.startsWith(\"id_img_prof_post\")) {\n      profile = e.nativeEvent.path[1].nextSibling.childNodes[0].innerText;\n    } else {\n      profile = e.target.innerText;\n    } // set in localStorage the profile name\n\n\n    window.localStorage.setItem(\"profile\", `${profile}`);\n    window.location.hash = \"#profile\";\n  }\n\n  addHTTPMedia(post) {\n    // If post image not contains http_media, add.\n    if (!post.picture.startsWith(this.http_media)) {\n      this.post_img = this.http_media + post.picture;\n    } else {\n      this.post_img = post.picture;\n    }\n  }\n\n  componentDidMount() {\n    // Getting posts.\n    lg_api(\"posts/\", {\n      headers: {\n        Authorization: `Token ${this.token}`\n      }\n    }).then(res => {\n      this.setState({\n        posts: res.data.results\n      });\n      console.log(res.data.results);\n    }).catch(err => {\n      console.error(err.response.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport { ListPosts }; // {this.state.posts.map((post, i) => {\n//   this.addHTTPMedia(post);\n//   return (\n//     <div\n//       key={i}\n//       id={post.id}\n//       className=\"row w-50 mx-auto mt-4  mb-2 p-2 posts border border-4\"\n//       onClick={(e) => this.handledPosts(e)}\n//     >\n//       {/* User profile image */}\n//       <div className=\"row row-profile-pic align-items-center\">\n//         <div className=\"col-sm-1\">\n//           <img\n//             className=\"profile-img-post rounded-circle go-to-profile\"\n//             id={`id_img_prof_post${post.id}`}\n//             src={post.profile?.picture}\n//             alt={post.profile?.picture}\n//             onClick={(e) => this.goToProfile(e)}\n//           />\n//         </div>\n//         {/* User profile name */}\n//         <div className=\"col-sm\">\n//           <h5\n//             className=\"h5 go-to-profile\"\n//             onClick={(e) => this.goToProfile(e)}\n//           >\n//             {post.profile?.user?.username}\n//           </h5>\n//         </div>\n//         {/* Created */}\n//         <div className=\"post-created\">\n//           <p className=\"h6 pt-1 px-1 text-black-50\">\n//             Created: {post.created}\n//           </p>\n//         </div>\n//       </div>\n//       {/* Post img */}\n//       <div className=\"\">\n//         <img\n//           className=\"w-100 rounded-top img-post\"\n//           src={this.post_img}\n//           alt={this.post_img}\n//         />\n//         {/* Like | comment | share | save post */}\n//         <div className=\"feedback\">\n//           {/* Like */}\n//           <BsFillHeartFill\n//             className=\"icon-size-post\"\n//             id={`id_like_post_${post.id}`}\n//           />\n//           {/* Comment */}\n//           <BsFillChatFill\n//             className=\"icon-size-post\"\n//             onClick={(e) => {\n//               let a = inputComment(e.target.parentElement.id);\n//               e.nativeEvent.path[4].appendChild(a);\n//             }}\n//             id={`id_comments_post_${post.id}`}\n//           />\n//           {/* Share */}\n//           <BsShareFill\n//             className=\"icon-size-post\"\n//             id={`id_share_post_${post.id}`}\n//           />\n//           {/* Save post */}\n//           <BsFillBookmarkFill\n//             className=\"icon-size-post\"\n//             id={`id_save_post_${post.id}`}\n//           />\n//         </div>\n//         {/* Likes count */}\n//         <div>\n//           <span\n//             className=\"text-end fs-6 likes\"\n//             id={`id_show_likes_${post.id}`}\n//           >\n//             {post?.likes} Likes\n//           </span>\n//         </div>\n//         {/* Description */}\n//         <div className=\"mt-2\">\n//           <p className=\"fs-6\">\n//             <span className=\"h6 me-2\">{post.description}</span>\n//           </p>\n//         </div>\n//         {/* Comments */}\n//         <div>\n//           <button\n//             className=\"btn btn-outline-info\"\n//             id={`id_btn_cmt_${post.id}`}\n//             onClick={(e) => {\n//               this.commentComponent(e);\n//             }}\n//           >\n//             Show comments...\n//           </button>\n//           <div className=\"\" id={`id_show_comments_${post.id}`}>\n//             {post.id === this.state?.comments[0]?.post\n//               ? this.state?.comments.map((value) => {\n//                   if (value?.created) {\n//                     this.created = value?.created.slice(0, 10);\n//                   }\n//                   return (\n//                     <div\n//                       className=\"row-profile-pic align-items-center mt-2 p-2 rounded border border-1\"\n//                       key={value?.id}\n//                     >\n//                       <div>\n//                         <img\n//                           className=\"profile-img-comment rounded-circle go-to-profile\"\n//                           id={`id_image_prof_comment_${value?.id}`}\n//                           src={value?.commented_by?.picture}\n//                           alt={value?.commented_by?.user?.username}\n//                           onClick={(e) => {\n//                             this.goToProfileComment(e);\n//                           }}\n//                         />\n//                       </div>\n//                       <div className=\"username\">\n//                         <h6\n//                           className=\"h5 go-to-profile\"\n//                           onClick={(e) => {\n//                             this.goToProfileComment(e);\n//                           }}\n//                         >\n//                           {value?.commented_by?.user?.username}{\" \"}\n//                           <span>:</span>\n//                         </h6>\n//                       </div>\n//                       <div className=\"comment-container\">\n//                         <p className=\"fs-comment\">{value?.comment}</p>\n//                         <div>\n//                           <span className=\"fs-6 text-black-50\">\n//                             {this.created}\n//                           </span>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   );\n//                 })\n//               : \"\"}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// })}","map":{"version":3,"names":["lg_api","React","BsFillHeartFill","BsFillChatFill","BsFillBookmarkFill","BsShareFill","likePost","inputComment","ListPosts","Component","constructor","props","state","posts","comments","token","window","localStorage","getItem","http_media","post_img","created","handledPosts","e","addHTTPMedia","bind","goToProfile","goToProfileComment","commentComponent","len","target","id","split","length","slice","headers","Authorization","params","id_post","then","res","setState","data","catch","err","console","error","response","nativeEvent","path","nextSibling","childNodes","innerText","profile","startsWith","firstChild","setItem","location","hash","post","picture","componentDidMount","results","log","render"],"sources":["/home/nahuela/ADesk/my_projects/lazygram_django/staticfiles/lazygram_app/src/apps/posts/ListPosts.js"],"sourcesContent":["/* List posts from lazygram with react */\n\nimport { lg_api } from \"../../__modules__\";\nimport \"../../css/posts/ListPosts.css\";\nimport React from \"react\";\nimport {\n  BsFillHeartFill,\n  BsFillChatFill,\n  BsFillBookmarkFill,\n  BsShareFill,\n} from \"react-icons/bs\";\n\nimport { likePost, inputComment } from \"../../utils/posts/posts\";\n\nclass ListPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { posts: [], comments: [] };\n    this.token = window.localStorage.getItem(\"token\");\n    this.http_media = \"http://localhost:8000/media/\";\n    this.post_img = \"\";\n    this.created = \"\";\n    this.handledPosts = (e) => {\n      likePost(e);\n    };\n    this.addHTTPMedia = this.addHTTPMedia.bind(this);\n    this.goToProfile = this.goToProfile.bind(this);\n    this.goToProfileComment = this.goToProfileComment.bind(this);\n    this.commentComponent = this.commentComponent.bind(this);\n  }\n\n  commentComponent(e) {\n    let len = e.target.id.split(\"\").length;\n    let id = e.target.id.slice(11, len);\n    lg_api(`comments/`, {\n      headers: {\n        Authorization: `Token ${this.token}`,\n      },\n      params: { id_post: id },\n    })\n      .then((res) => {\n        this.setState({ comments: res.data });\n      })\n      .catch((err) => {\n        console.error(err.response);\n      });\n  }\n\n  /**\n   * Redirect to the desired profile.\n   * @param {*} post\n   */\n  goToProfileComment(e) {\n    // Getting username\n    let len = e.nativeEvent.path[1].nextSibling.childNodes[0].innerText.length;\n    let profile;\n    if (e.target.id.startsWith(\"id_image_prof_comment_\")) {\n      profile = e.nativeEvent.path[1].nextSibling.childNodes[0].innerText.slice(\n        0,\n        len - 1\n      );\n    } else {\n      profile = e.target.firstChild.data;\n    }\n    // set in localStorage the profile name\n    window.localStorage.setItem(\"profile\", `${profile}`);\n    window.location.hash = \"#profile\";\n  }\n\n  goToProfile(e) {\n    // Getting profile name\n    let profile;\n    if (e.target.id.startsWith(\"id_img_prof_post\")) {\n      profile = e.nativeEvent.path[1].nextSibling.childNodes[0].innerText;\n    } else {\n      profile = e.target.innerText;\n    }\n    // set in localStorage the profile name\n    window.localStorage.setItem(\"profile\", `${profile}`);\n    window.location.hash = \"#profile\";\n  }\n\n  addHTTPMedia(post) {\n    // If post image not contains http_media, add.\n    if (!post.picture.startsWith(this.http_media)) {\n      this.post_img = this.http_media + post.picture;\n    } else {\n      this.post_img = post.picture;\n    }\n  }\n\n  componentDidMount() {\n    // Getting posts.\n    lg_api(\"posts/\", {\n      headers: {\n        Authorization: `Token ${this.token}`,\n      },\n    })\n      .then((res) => {\n        this.setState({ posts: res.data.results });\n        console.log(res.data.results);\n      })\n      .catch((err) => {\n        console.error(err.response.data);\n      });\n  }\n\n  render() {\n    return <section className=\"\"></section>;\n  }\n}\n\nexport { ListPosts };\n\n// {this.state.posts.map((post, i) => {\n//   this.addHTTPMedia(post);\n\n//   return (\n//     <div\n//       key={i}\n//       id={post.id}\n//       className=\"row w-50 mx-auto mt-4  mb-2 p-2 posts border border-4\"\n//       onClick={(e) => this.handledPosts(e)}\n//     >\n//       {/* User profile image */}\n//       <div className=\"row row-profile-pic align-items-center\">\n//         <div className=\"col-sm-1\">\n//           <img\n//             className=\"profile-img-post rounded-circle go-to-profile\"\n//             id={`id_img_prof_post${post.id}`}\n//             src={post.profile?.picture}\n//             alt={post.profile?.picture}\n//             onClick={(e) => this.goToProfile(e)}\n//           />\n//         </div>\n\n//         {/* User profile name */}\n//         <div className=\"col-sm\">\n//           <h5\n//             className=\"h5 go-to-profile\"\n//             onClick={(e) => this.goToProfile(e)}\n//           >\n//             {post.profile?.user?.username}\n//           </h5>\n//         </div>\n\n//         {/* Created */}\n//         <div className=\"post-created\">\n//           <p className=\"h6 pt-1 px-1 text-black-50\">\n//             Created: {post.created}\n//           </p>\n//         </div>\n//       </div>\n\n//       {/* Post img */}\n//       <div className=\"\">\n//         <img\n//           className=\"w-100 rounded-top img-post\"\n//           src={this.post_img}\n//           alt={this.post_img}\n//         />\n\n//         {/* Like | comment | share | save post */}\n//         <div className=\"feedback\">\n//           {/* Like */}\n//           <BsFillHeartFill\n//             className=\"icon-size-post\"\n//             id={`id_like_post_${post.id}`}\n//           />\n\n//           {/* Comment */}\n//           <BsFillChatFill\n//             className=\"icon-size-post\"\n//             onClick={(e) => {\n//               let a = inputComment(e.target.parentElement.id);\n//               e.nativeEvent.path[4].appendChild(a);\n//             }}\n//             id={`id_comments_post_${post.id}`}\n//           />\n\n//           {/* Share */}\n//           <BsShareFill\n//             className=\"icon-size-post\"\n//             id={`id_share_post_${post.id}`}\n//           />\n\n//           {/* Save post */}\n//           <BsFillBookmarkFill\n//             className=\"icon-size-post\"\n//             id={`id_save_post_${post.id}`}\n//           />\n//         </div>\n\n//         {/* Likes count */}\n//         <div>\n//           <span\n//             className=\"text-end fs-6 likes\"\n//             id={`id_show_likes_${post.id}`}\n//           >\n//             {post?.likes} Likes\n//           </span>\n//         </div>\n\n//         {/* Description */}\n//         <div className=\"mt-2\">\n//           <p className=\"fs-6\">\n//             <span className=\"h6 me-2\">{post.description}</span>\n//           </p>\n//         </div>\n\n//         {/* Comments */}\n//         <div>\n//           <button\n//             className=\"btn btn-outline-info\"\n//             id={`id_btn_cmt_${post.id}`}\n//             onClick={(e) => {\n//               this.commentComponent(e);\n//             }}\n//           >\n//             Show comments...\n//           </button>\n//           <div className=\"\" id={`id_show_comments_${post.id}`}>\n//             {post.id === this.state?.comments[0]?.post\n//               ? this.state?.comments.map((value) => {\n//                   if (value?.created) {\n//                     this.created = value?.created.slice(0, 10);\n//                   }\n//                   return (\n//                     <div\n//                       className=\"row-profile-pic align-items-center mt-2 p-2 rounded border border-1\"\n//                       key={value?.id}\n//                     >\n//                       <div>\n//                         <img\n//                           className=\"profile-img-comment rounded-circle go-to-profile\"\n//                           id={`id_image_prof_comment_${value?.id}`}\n//                           src={value?.commented_by?.picture}\n//                           alt={value?.commented_by?.user?.username}\n//                           onClick={(e) => {\n//                             this.goToProfileComment(e);\n//                           }}\n//                         />\n//                       </div>\n\n//                       <div className=\"username\">\n//                         <h6\n//                           className=\"h5 go-to-profile\"\n//                           onClick={(e) => {\n//                             this.goToProfileComment(e);\n//                           }}\n//                         >\n//                           {value?.commented_by?.user?.username}{\" \"}\n//                           <span>:</span>\n//                         </h6>\n//                       </div>\n//                       <div className=\"comment-container\">\n//                         <p className=\"fs-comment\">{value?.comment}</p>\n//                         <div>\n//                           <span className=\"fs-6 text-black-50\">\n//                             {this.created}\n//                           </span>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   );\n//                 })\n//               : \"\"}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// })}\n"],"mappings":"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},"metadata":{},"sourceType":"module"}