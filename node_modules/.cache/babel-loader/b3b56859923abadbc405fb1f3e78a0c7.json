{"ast":null,"code":"import { lgApi } from \"../../__modules__\";\n/**\n * Like a post.\n * @param {*} e\n */\n\nasync function likePost(e, accessToken) {\n  if (String(e.nativeEvent.path[1].id).startsWith(\"id_like_post\")) {\n    let url = `posts/${e.nativeEvent.path[4].id}/`;\n    let likesComponent = document.querySelector(`#id_show_likes_${e.nativeEvent.path[4].id}`);\n    await lgApi(url, {\n      method: \"put\",\n      headers: {\n        Authorization: \"Bearer \" + String(accessToken)\n      }\n    }).then(res => {\n      likesComponent.innerHTML = `${res.data.likes} Likes`;\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n}\n/**\n * Send comments.\n * @param {*} e\n */\n\n\nasync function commentPost(e, newComment, accessToken) {\n  try {\n    let form_comment = new FormData();\n    let postid = e.path[2].id; // Post ID validation.\n\n    if (postid !== null) {\n      form_comment.append(\"post\", postid);\n    } // Comment validation.\n\n\n    if (newComment !== null) {\n      form_comment.append(\"comment\", newComment);\n    } // Put comments.\n\n\n    lgApi(\"comments/\", {\n      method: \"post\",\n      headers: {\n        Authorization: \"Bearer \" + String(accessToken)\n      },\n      data: form_comment\n    }).then(res => {}).catch(err => {\n      console.error(err.response.data);\n    });\n  } catch (err) {\n    alert(err.name, err.message);\n  }\n}\n/**\n * Input component from comment.\n * @param {*} id_comment\n * @returns\n */\n\n\nfunction inputComment(id_comment, accessToken) {\n  let commentComponent = document.createElement(\"div\");\n  let inputComponent = document.createElement(\"input\");\n  let btnComponent = document.createElement(\"button\"); // Comment\n\n  commentComponent.classList = \"row-inp-comment mt-2 rounded-pill border border-2\"; // Input\n\n  inputComponent.classList = \"input-cmt border-0\";\n  inputComponent.placeholder = \"Add comment...\";\n  inputComponent.id = `${id_comment}_inp`; // Send button\n\n  btnComponent.classList = \"btn btn-outline-primary text-center col-sm rounded-pill\";\n  btnComponent.innerHTML = \"Send\";\n  commentComponent.append(inputComponent, btnComponent);\n  btnComponent.addEventListener(\"click\", e => {\n    let inputCommentValue = document.querySelector(`#${id_comment}_inp`).value;\n    commentPost(e, inputCommentValue, accessToken);\n  });\n  return commentComponent;\n}\n/**\n * Reply comments.\n * @param {*} e\n */\n\n\nasync function replyComment(e, accessToken) {\n  if (String(e.nativeEvent.path[1].id).startsWith(\"comments_post\")) {\n    try {\n      let replied_by = window.localStorage.getItem(\"profile_auth\");\n      let form_comment = new FormData();\n      let len = e.target.parentElement.id.split(\"\").length;\n      let commentid = parseInt(e.target.parentElement.id.split(\"\")[len - 1]);\n      let reply = e.target.value; // Comment id validation.\n\n      if (commentid !== null) {\n        form_comment.append(\"commentid\", commentid);\n      } // Replied by validation.\n\n\n      if (replied_by !== null) {\n        form_comment.append(\"replied_by\", replied_by);\n      } // Reply validation.\n\n\n      if (reply !== null) {\n        form_comment.append(\"reply\", reply);\n      } // Put comments.\n\n\n      lgApi(`replies/`, {\n        method: \"put\",\n        headers: {\n          Authorization: \"Bearer \" + String(accessToken)\n        },\n        data: form_comment\n      }).then(res => {}).catch(err => {\n        console.error(err.response.data);\n      });\n    } catch (err) {\n      alert(err.name, err.message);\n    }\n  }\n} // Components\n\n\nexport { inputComment }; // Utils\n\nexport { likePost, commentPost, replyComment };","map":{"version":3,"names":["lgApi","likePost","e","accessToken","String","nativeEvent","path","id","startsWith","url","likesComponent","document","querySelector","method","headers","Authorization","then","res","innerHTML","data","likes","catch","err","console","error","commentPost","newComment","form_comment","FormData","postid","append","response","alert","name","message","inputComment","id_comment","commentComponent","createElement","inputComponent","btnComponent","classList","placeholder","addEventListener","inputCommentValue","value","replyComment","replied_by","window","localStorage","getItem","len","target","parentElement","split","length","commentid","parseInt","reply"],"sources":["/home/nahuela/Desktop/projects/lazygram_react/src/utils/posts/posts.js"],"sourcesContent":["import { lgApi } from \"../../__modules__\";\n\n/**\n * Like a post.\n * @param {*} e\n */\nasync function likePost(e, accessToken) {\n  if (String(e.nativeEvent.path[1].id).startsWith(\"id_like_post\")) {\n    let url = `posts/${e.nativeEvent.path[4].id}/`;\n    let likesComponent = document.querySelector(\n      `#id_show_likes_${e.nativeEvent.path[4].id}`\n    );\n\n    await lgApi(url, {\n      method: \"put\",\n      headers: {\n        Authorization: \"Bearer \" + String(accessToken),\n      },\n    })\n      .then((res) => {\n        likesComponent.innerHTML = `${res.data.likes} Likes`;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n}\n\n/**\n * Send comments.\n * @param {*} e\n */\nasync function commentPost(e, newComment, accessToken) {\n  try {\n    let form_comment = new FormData();\n    let postid = e.path[2].id;\n\n    // Post ID validation.\n    if (postid !== null) {\n      form_comment.append(\"post\", postid);\n    }\n\n    // Comment validation.\n    if (newComment !== null) {\n      form_comment.append(\"comment\", newComment);\n    }\n\n    // Put comments.\n    lgApi(\"comments/\", {\n      method: \"post\",\n      headers: {\n        Authorization: \"Bearer \" + String(accessToken),\n      },\n      data: form_comment,\n    })\n      .then((res) => {\n      })\n      .catch((err) => {\n        console.error(err.response.data);\n      });\n  } catch (err) {\n    alert(err.name, err.message);\n  }\n}\n\n/**\n * Input component from comment.\n * @param {*} id_comment\n * @returns\n */\nfunction inputComment(id_comment, accessToken) {\n  let commentComponent = document.createElement(\"div\");\n  let inputComponent = document.createElement(\"input\");\n  let btnComponent = document.createElement(\"button\");\n\n  // Comment\n  commentComponent.classList =\n    \"row-inp-comment mt-2 rounded-pill border border-2\";\n\n  // Input\n  inputComponent.classList = \"input-cmt border-0\";\n  inputComponent.placeholder = \"Add comment...\";\n  inputComponent.id = `${id_comment}_inp`;\n\n  // Send button\n  btnComponent.classList =\n    \"btn btn-outline-primary text-center col-sm rounded-pill\";\n  btnComponent.innerHTML = \"Send\";\n  commentComponent.append(inputComponent, btnComponent);\n  btnComponent.addEventListener(\"click\", (e) => {\n    let inputCommentValue = document.querySelector(`#${id_comment}_inp`).value;\n    commentPost(e, inputCommentValue, accessToken);\n  });\n\n  return commentComponent;\n}\n\n/**\n * Reply comments.\n * @param {*} e\n */\nasync function replyComment(e, accessToken) {\n  if (String(e.nativeEvent.path[1].id).startsWith(\"comments_post\")) {\n    try {\n      let replied_by = window.localStorage.getItem(\"profile_auth\");\n      let form_comment = new FormData();\n      let len = e.target.parentElement.id.split(\"\").length;\n      let commentid = parseInt(e.target.parentElement.id.split(\"\")[len - 1]);\n\n      let reply = e.target.value;\n\n      // Comment id validation.\n      if (commentid !== null) {\n        form_comment.append(\"commentid\", commentid);\n      }\n\n      // Replied by validation.\n      if (replied_by !== null) {\n        form_comment.append(\"replied_by\", replied_by);\n      }\n\n      // Reply validation.\n      if (reply !== null) {\n        form_comment.append(\"reply\", reply);\n      }\n\n      // Put comments.\n      lgApi(`replies/`, {\n        method: \"put\",\n        headers: {\n          Authorization: \"Bearer \" + String(accessToken),\n        },\n        data: form_comment,\n      })\n        .then((res) => {\n        })\n        .catch((err) => {\n          console.error(err.response.data);\n        });\n    } catch (err) {\n      alert(err.name, err.message);\n    }\n  }\n}\n\n// Components\nexport { inputComment };\n\n// Utils\nexport { likePost, commentPost, replyComment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}