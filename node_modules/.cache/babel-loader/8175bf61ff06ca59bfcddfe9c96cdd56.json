{"ast":null,"code":"var _jsxFileName = \"/home/nahuela/Desktop/projects/lazygram_react/src/context/AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { lgApi } from \"../__modules__\";\nimport { addCache } from \"../utils/users/cache\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // Refresh token\n  let [refreshToken, setRefreshToken] = useState(\"\"); // Access token\n\n  const [accessToken, setAccessToken] = useState(false); // New posts state\n\n  const [newPost, setNewPost] = useState([]); // Edit or follow btn\n\n  const [editOrFollowBtn, setEditOrFollowBtn] = useState(\"Edit profile\"); // Edit or follow htmlClass\n\n  const [editOrFollowClass, setEditOrFollowClass] = useState(\"ml-5 btn btn-sm btn-outline-info\"); // Follow or Unfollow btn\n\n  const [followOrUnfollow, setFollowOrUnfollow] = useState(\"Follow\"); // Follow or Unfollow htmlClass\n\n  const [followClass, setFollowClass] = useState(\"ml-5 btn btn-primary\");\n  /**\n   * Retrieve active token that stored in cache storage\n   */\n\n  const retrieveAccessToken = async () => {\n    await caches.open(\"access_token\").then(async cache => {\n      await cache.match(\"/access_token\").then(async token => {\n        if (token !== undefined) {\n          await token.json().then(accessToken => {\n            setAccessToken(accessToken);\n          });\n        } else {\n          setAccessToken(false);\n        }\n      }).catch(err => {\n        console.error(\"Access token not found\", err);\n      });\n    });\n  };\n  /**\n   * Is access token is expired, retrieve refresh token\n   */\n\n\n  const updateToken = async () => {\n    // Refreshing tokens: access and refresh in 5 minute (300000 ms) invervals\n    const interval = setInterval(async () => {\n      await caches.open(\"refresh_token\").then(async cache => {\n        try {\n          await cache.match(\"/refresh_token\").then(async token => {\n            token.json().then(async refresh => {\n              setRefreshToken(refresh); // Refresh token\n\n              await lgApi(\"accounts/refresh-token/\", {\n                method: \"post\",\n                data: {\n                  refresh: refresh\n                }\n              }).then(_ref2 => {\n                let {\n                  data\n                } = _ref2;\n                // Add refresh and access tokens in cache\n                addCache(\"refresh_token\", \"http://localhost:3000/refresh_token\", data.refresh);\n                addCache(\"access_token\", \"http://localhost:3000/access_token\", data.access);\n                setAccessToken(data.access);\n                setRefreshToken(data.refresh);\n              }).catch(err => {\n                console.error(\"Error to refresh token\", err.response.data);\n              });\n            });\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }, 280000);\n    return interval;\n  }; // Refreshing token effect\n\n\n  useEffect(() => {\n    const cancelToken = axios.CancelToken.source();\n    const interval = updateToken();\n    return () => {\n      cancelToken.cancel();\n      clearInterval(interval);\n    };\n  }, []); // Data provided\n\n  let contextData = {\n    // Expired access token function\n    updateToken,\n    // Retrieve access token\n    retrieveAccessToken,\n    // Access token\n    accessToken,\n    setAccessToken,\n    // Set refresh token\n    setRefreshToken,\n    // New posts\n    newPost,\n    setNewPost,\n    // Edit or follow btn state\n    editOrFollowBtn,\n    setEditOrFollowBtn,\n    // Edit or follow class state\n    editOrFollowClass,\n    setEditOrFollowClass,\n    // Follow or unfollow btn state\n    followOrUnfollow,\n    setFollowOrUnfollow,\n    // Follow or unfollow class state\n    followClass,\n    setFollowClass\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"r1NXfcb2lGb/I2J49uRrSaK9RbU=\");\n\n_c = AuthProvider;\nexport { AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","lgApi","addCache","axios","AuthContext","AuthProvider","children","refreshToken","setRefreshToken","accessToken","setAccessToken","newPost","setNewPost","editOrFollowBtn","setEditOrFollowBtn","editOrFollowClass","setEditOrFollowClass","followOrUnfollow","setFollowOrUnfollow","followClass","setFollowClass","retrieveAccessToken","caches","open","then","cache","match","token","undefined","json","catch","err","console","error","updateToken","interval","setInterval","refresh","method","data","access","response","cancelToken","CancelToken","source","cancel","clearInterval","contextData"],"sources":["/home/nahuela/Desktop/projects/lazygram_react/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { lgApi } from \"../__modules__\";\nimport { addCache } from \"../utils/users/cache\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nconst AuthProvider = ({ children }) => {\n  // Refresh token\n  let [refreshToken, setRefreshToken] = useState(\"\");\n\n  // Access token\n  const [accessToken, setAccessToken] = useState(false);\n\n  // New posts state\n  const [newPost, setNewPost] = useState([]);\n\n  // Edit or follow btn\n  const [editOrFollowBtn, setEditOrFollowBtn] = useState(\"Edit profile\");\n  // Edit or follow htmlClass\n  const [editOrFollowClass, setEditOrFollowClass] = useState(\n    \"ml-5 btn btn-sm btn-outline-info\"\n  );\n\n  // Follow or Unfollow btn\n  const [followOrUnfollow, setFollowOrUnfollow] = useState(\"Follow\");\n  // Follow or Unfollow htmlClass\n  const [followClass, setFollowClass] = useState(\"ml-5 btn btn-primary\");\n\n  /**\n   * Retrieve active token that stored in cache storage\n   */\n  const retrieveAccessToken = async () => {\n    await caches.open(\"access_token\").then(async (cache) => {\n      await cache\n        .match(\"/access_token\")\n        .then(async (token) => {\n          if (token !== undefined) {\n            await token.json().then((accessToken) => {\n              setAccessToken(accessToken);\n            });\n          } else {\n            setAccessToken(false);\n          }\n        })\n        .catch((err) => {\n          console.error(\"Access token not found\", err);\n        });\n    });\n  };\n\n  /**\n   * Is access token is expired, retrieve refresh token\n   */\n  const updateToken = async () => {\n    // Refreshing tokens: access and refresh in 5 minute (300000 ms) invervals\n    const interval = setInterval(async () => {\n      await caches.open(\"refresh_token\").then(async (cache) => {\n        try {\n          await cache.match(\"/refresh_token\").then(async (token) => {\n            token.json().then(async (refresh) => {\n              setRefreshToken(refresh);\n\n              // Refresh token\n              await lgApi(\"accounts/refresh-token/\", {\n                method: \"post\",\n                data: { refresh: refresh },\n              })\n                .then(({ data }) => {\n                  // Add refresh and access tokens in cache\n                  addCache(\n                    \"refresh_token\",\n                    \"http://localhost:3000/refresh_token\",\n                    data.refresh\n                  );\n                  addCache(\n                    \"access_token\",\n                    \"http://localhost:3000/access_token\",\n                    data.access\n                  );\n                  setAccessToken(data.access);\n                  setRefreshToken(data.refresh);\n                })\n                .catch((err) => {\n                  console.error(\"Error to refresh token\", err.response.data);\n                });\n            });\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }, 280000);\n\n    return interval;\n  };\n\n  // Refreshing token effect\n  useEffect(() => {\n    const cancelToken = axios.CancelToken.source();\n    const interval = updateToken();\n\n    return () => {\n      cancelToken.cancel();\n      clearInterval(interval);\n    };\n  }, []);\n\n  // Data provided\n  let contextData = {\n    // Expired access token function\n    updateToken,\n    // Retrieve access token\n    retrieveAccessToken,\n    // Access token\n    accessToken,\n    setAccessToken,\n    // Set refresh token\n    setRefreshToken,\n    // New posts\n    newPost,\n    setNewPost,\n    // Edit or follow btn state\n    editOrFollowBtn,\n    setEditOrFollowBtn,\n    // Edit or follow class state\n    editOrFollowClass,\n    setEditOrFollowClass,\n    // Follow or unfollow btn state\n    followOrUnfollow,\n    setFollowOrUnfollow,\n    // Follow or unfollow class state\n    followClass,\n    setFollowClass,\n  };\n\n  return (\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}